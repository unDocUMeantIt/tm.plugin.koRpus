% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/02_method_20_kRp.corpus_get_set_is.R
\docType{methods}
\name{taggedText,kRp.flatHier-method}
\alias{taggedText,kRp.flatHier-method}
\alias{taggedText,-methods}
\alias{taggedText<-,kRp.flatHier-method}
\alias{taggedText<-,-methods}
\alias{describe,kRp.flatHier-method}
\alias{describe,-methods}
\alias{describe<-,kRp.flatHier-method}
\alias{describe<-,-methods}
\alias{language,kRp.flatHier-method}
\alias{language,-methods}
\alias{language<-,kRp.flatHier-method}
\alias{language<-,-methods}
\alias{corpusHasFeature}
\alias{corpusHasFeature,kRp.flatHier-method}
\alias{corpusHasFeature,-methods}
\alias{corpusHasFeature<-}
\alias{corpusHasFeature<-,kRp.flatHier-method}
\alias{corpusHasFeature<-,-methods}
\alias{corpusFeature}
\alias{corpusFeature,kRp.flatHier-method}
\alias{corpusFeature,-methods}
\alias{corpusFeature<-}
\alias{corpusFeature<-,kRp.flatHier-method}
\alias{corpusFeature<-,-methods}
\alias{corpusReadability}
\alias{corpusReadability,kRp.flatHier-method}
\alias{corpusReadability,-methods}
\alias{corpusReadability<-}
\alias{corpusReadability<-,kRp.flatHier-method}
\alias{corpusReadability<-,-methods}
\alias{corpusTm}
\alias{corpusTm,kRp.flatHier-method}
\alias{corpusTm,-methods}
\alias{corpusTm<-}
\alias{corpusTm<-,kRp.flatHier-method}
\alias{corpusTm<-,-methods}
\alias{corpusMeta}
\alias{corpusMeta,kRp.flatHier-method}
\alias{corpusMeta,-methods}
\alias{corpusMeta<-}
\alias{corpusMeta<-,kRp.flatHier-method}
\alias{corpusMeta<-,-methods}
\alias{corpusHyphen}
\alias{corpusHyphen,kRp.flatHier-method}
\alias{corpusHyphen,-methods}
\alias{corpusHyphen<-}
\alias{corpusHyphen<-,kRp.flatHier-method}
\alias{corpusHyphen<-,-methods}
\alias{corpusLexDiv}
\alias{corpusLexDiv,kRp.flatHier-method}
\alias{corpusLexDiv,-methods}
\alias{corpusLexDiv<-}
\alias{corpusLexDiv<-,kRp.flatHier-method}
\alias{corpusLexDiv<-,-methods}
\alias{corpusFreq}
\alias{corpusFreq,kRp.flatHier-method}
\alias{corpusFreq,-methods}
\alias{corpusFreq<-}
\alias{corpusFreq<-,kRp.flatHier-method}
\alias{corpusFreq<-,-methods}
\alias{corpusCorpFreq}
\alias{corpusCorpFreq,kRp.flatHier-method}
\alias{corpusCorpFreq,-methods}
\alias{corpusCorpFreq<-}
\alias{corpusCorpFreq<-,kRp.flatHier-method}
\alias{corpusCorpFreq<-,-methods}
\alias{corpusHierarchy}
\alias{corpusHierarchy,kRp.flatHier-method}
\alias{corpusHierarchy,-methods}
\alias{corpusHierarchy<-}
\alias{corpusHierarchy<-,kRp.flatHier-method}
\alias{corpusHierarchy<-,-methods}
\alias{corpusFiles}
\alias{corpusFiles,kRp.flatHier-method}
\alias{corpusFiles,-methods}
\alias{corpusFiles<-}
\alias{corpusFiles<-,kRp.flatHier-method}
\alias{corpusFiles<-,-methods}
\alias{diffText,kRp.flatHier-method}
\alias{diffText,-methods}
\alias{diffText<-,kRp.flatHier-method}
\alias{diffText<-,-methods}
\alias{originalText,kRp.flatHier-method}
\alias{originalText,-methods}
\alias{is.corpus}
\alias{[,kRp.flatHier,ANY,ANY,ANY-method}
\alias{[,-methods}
\alias{[<-,kRp.flatHier,ANY,ANY,ANY-method}
\alias{[<-,-methods}
\alias{[[,kRp.flatHier-method}
\alias{[[,-methods}
\alias{[[,kRp.flatHier,ANY-method}
\alias{[[<-,kRp.flatHier-method}
\alias{[[<-,-methods}
\alias{[[<-,kRp.flatHier,ANY,ANY-method}
\alias{tif_as_tokens_df}
\alias{tif_as_tokens_df,kRp.flatHier-method}
\alias{tif_as_tokens_df,-methods}
\alias{tif_as_tokens_df,hierarchy-method}
\alias{tif_as_corpus_df}
\alias{tif_as_corpus_df,kRp.flatHier-method}
\alias{tif_as_corpus_df,-methods}
\alias{tif_as_corpus_df,hierarchy-method}
\title{Getter/setter methods for kRp.flatHier objects}
\usage{
\S4method{taggedText}{kRp.flatHier}(obj)

\S4method{taggedText}{kRp.flatHier}(obj) <- value

\S4method{describe}{kRp.flatHier}(obj)

\S4method{describe}{kRp.flatHier}(obj) <- value

\S4method{language}{kRp.flatHier}(obj)

\S4method{language}{kRp.flatHier}(obj) <- value

corpusHasFeature(obj, feature, ...)

\S4method{corpusHasFeature}{kRp.flatHier}(obj, feature)

corpusHasFeature(obj, feature) <- value

\S4method{corpusHasFeature}{kRp.flatHier}(obj, feature) <- value

corpusFeature(obj, feature, ...)

\S4method{corpusFeature}{kRp.flatHier}(obj, feature)

corpusFeature(obj, feature) <- value

\S4method{corpusFeature}{kRp.flatHier}(obj, feature) <- value

corpusReadability(obj, ...)

\S4method{corpusReadability}{kRp.flatHier}(obj)

corpusReadability(obj) <- value

\S4method{corpusReadability}{kRp.flatHier}(obj) <- value

corpusTm(obj, id = NULL)

\S4method{corpusTm}{kRp.flatHier}(obj)

corpusTm(obj) <- value

\S4method{corpusTm}{kRp.flatHier}(obj) <- value

corpusMeta(obj, meta = NULL, fail = TRUE)

\S4method{corpusMeta}{kRp.flatHier}(obj, meta = NULL, fail = TRUE)

corpusMeta(obj, meta = NULL) <- value

\S4method{corpusMeta}{kRp.flatHier}(obj, meta = NULL) <- value

corpusHyphen(obj, ...)

\S4method{corpusHyphen}{kRp.flatHier}(obj)

corpusHyphen(obj) <- value

\S4method{corpusHyphen}{kRp.flatHier}(obj) <- value

corpusLexDiv(obj, ...)

\S4method{corpusLexDiv}{kRp.flatHier}(obj)

corpusLexDiv(obj) <- value

\S4method{corpusLexDiv}{kRp.flatHier}(obj) <- value

corpusFreq(obj, ...)

\S4method{corpusFreq}{kRp.flatHier}(obj)

corpusFreq(obj) <- value

\S4method{corpusFreq}{kRp.flatHier}(obj) <- value

corpusCorpFreq(obj, ...)

\S4method{corpusCorpFreq}{kRp.flatHier}(obj)

corpusCorpFreq(obj) <- value

\S4method{corpusCorpFreq}{kRp.flatHier}(obj) <- value

corpusHierarchy(obj, ...)

\S4method{corpusHierarchy}{kRp.flatHier}(obj)

corpusHierarchy(obj) <- value

\S4method{corpusHierarchy}{kRp.flatHier}(obj) <- value

corpusFiles(obj, paths = FALSE, ...)

\S4method{corpusFiles}{kRp.flatHier}(obj, paths = FALSE)

corpusFiles(obj) <- value

\S4method{corpusFiles}{kRp.flatHier}(obj) <- value

\S4method{diffText}{kRp.flatHier}(obj)

\S4method{diffText}{kRp.flatHier}(obj) <- value

\S4method{originalText}{kRp.flatHier}(obj)

is.corpus(obj)

\S4method{[}{kRp.flatHier,ANY,ANY,ANY}(x, i, j)

\S4method{[}{kRp.flatHier,ANY,ANY,ANY}(x, i, j) <- value

\S4method{[[}{kRp.flatHier}(x, i)

\S4method{[[}{kRp.flatHier}(x, i) <- value

tif_as_tokens_df(tokens)

\S4method{tif_as_tokens_df}{kRp.flatHier}(tokens)

tif_as_corpus_df(corpus)

\S4method{tif_as_corpus_df}{kRp.flatHier}(corpus)
}
\arguments{
\item{obj}{An object of class \code{\link[tm.plugin.koRpus:kRp.flatHier-class]{kRp.flatHier}}.}

\item{id}{Character value specifying the category ID of child objects you want to get.
If \code{NULL} then the child objects of the current top level are returned,
otherwise all children with the ID specified. Only interpreted if \code{level=NULL}
(you can't use both at the same time).}

\item{meta}{If not NULL, the \code{meta} list entry of the given name.}

\item{fail}{Logical,
      whether the method should fail with an error if \code{meta} was not found.
If set to \code{FALSE}, returns \code{invisible(NULL)} instead.}

\item{paths}{Logical,
      indicates for \code{corpusFiles()} whether full paths should be returned, or just the actual file name.}

\item{x}{See \code{obj}.}

\item{i}{Defines the row selector (\code{[}) or the name to match (\code{[[}) in the tokens slot.}

\item{j}{Defines the column selector in the tokens slot.}

\item{tokens}{An object of class \code{kRp.flatHier}.}

\item{corpus}{An object of class \code{kRp.flatHier}.}

\item{level}{Either the integer value or name (character string) of the target level. If \code{NULL} the top level is used.}
}
\description{
These methods should be used to get or set values of text objects
generated by functions like \code{\link[tm.plugin.koRpus:readCorpus]{readCorpus}}.
}
\details{
\itemize{
  \item{\code{taggedText()} }{returns the \code{tokens} slot.}
  \item{\code{describe()} }{returns the \code{desc} slot.}
  \item{\code{corpusHasFeature()} }{returns \code{TRUE} or code{FALSE},
      depending on whether the requested feature is present or not.}
  \item{\code{corpusFeature()} }{returns the list entry of the \code{feat_list} slot for the requested feature.}
  \item{\code{corpusReadability()} }{returns the list of \code{kRp.readability} objects.}
  \item{\code{corpusTm()} }{returns the \code{VCorpus} object.}
  \item{\code{corpusMeta()} }{returns the list with meta information.}
  \item{\code{corpusHyphen()} }{returns the list of \code{kRp.hyphen} objects.}
  \item{\code{corpusLexDiv()} }{returns the list of \code{kRp.TTR} objects.}
  \item{\code{corpusFiles()} }{returns the character vector of file names of the object.}
  \item{\code{corpusFreq()} }{returns the frequency analysis data from the \code{feat_list} slot.}
  \item{\code{corpusCorpFreq()} }{returns the \code{kRp.corp.freq} object of the \code{feat_list} slot.}
  \item{\code{corpusHierarchy()} }{returns the corpus' hierarchy structure.}
  \item{\code{diffText()} }{returns the \code{diff} element of the \code{feat_list} slot.}
  \item{\code{originalText} }{regenerates the original text before text transformations and returns it as a data frame.}
  \item{\code{[}/\code{[[} }{can be used as a shortcut to index the results of \code{taggedText()}.}
  \item{\code{tif_as_corpus_df} }{returns the whole corpus in a single TIF[1] compliant
     data.frame.}
  \item{\code{tif_as_tokens_df} }{returns the \code{tokens} slot in a TIF[1] compliant
     data.frame, i.e., \code{doc_id} is not a factor but a character vector.}
}
}
\examples{
\dontrun{
taggedText(myCorpus)
corpusMeta(myCorpus, "note") <- "an interesting read!"

# export object to TIF compliant data frame
myCorpus_df <- tif_as_corpus_df(myCorpus)
}
}
\references{
[1] Text Interchange Formats (\url{https://github.com/ropensci/tif})
}
