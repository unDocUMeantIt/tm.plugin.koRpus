% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/02_method_20_kRp.corpus_get_set_is.R
\docType{methods}
\name{corpusTagged}
\alias{corpusTagged}
\alias{corpusTagged,kRp.hierarchy-method}
\alias{corpusTagged,-methods}
\alias{corpusTagged<-}
\alias{corpusTagged<-,kRp.hierarchy-method}
\alias{corpusTagged<-,-methods}
\alias{corpusReadability}
\alias{corpusReadability,kRp.hierarchy-method}
\alias{corpusReadability,-methods}
\alias{corpusReadability<-}
\alias{corpusReadability<-,kRp.hierarchy-method}
\alias{corpusReadability<-,-methods}
\alias{corpusTm}
\alias{corpusTm,kRp.hierarchy-method}
\alias{corpusTm,-methods}
\alias{corpusTm<-}
\alias{corpusTm<-,kRp.hierarchy-method}
\alias{corpusTm<-,-methods}
\alias{corpusMeta}
\alias{corpusMeta,kRp.hierarchy-method}
\alias{corpusMeta,-methods}
\alias{corpusMeta<-}
\alias{corpusMeta<-,kRp.hierarchy-method}
\alias{corpusMeta<-,-methods}
\alias{corpusHyphen}
\alias{corpusHyphen,kRp.hierarchy-method}
\alias{corpusHyphen,-methods}
\alias{corpusHyphen<-}
\alias{corpusHyphen<-,kRp.hierarchy-method}
\alias{corpusHyphen<-,-methods}
\alias{corpusTTR}
\alias{corpusTTR,kRp.hierarchy-method}
\alias{corpusTTR,-methods}
\alias{corpusTTR<-}
\alias{corpusTTR<-,kRp.hierarchy-method}
\alias{corpusTTR<-,-methods}
\alias{corpusFreq}
\alias{corpusFreq,kRp.hierarchy-method}
\alias{corpusFreq,-methods}
\alias{corpusFreq<-}
\alias{corpusFreq<-,kRp.hierarchy-method}
\alias{corpusFreq<-,-methods}
\alias{corpusLevel}
\alias{corpusLevel,kRp.hierarchy-method}
\alias{corpusLevel,-methods}
\alias{corpusLevel<-}
\alias{corpusLevel<-,kRp.hierarchy-method}
\alias{corpusLevel<-,-methods}
\alias{corpusChildren}
\alias{corpusChildren,kRp.hierarchy-method}
\alias{corpusChildren,-methods}
\alias{corpusChildren<-}
\alias{corpusChildren<-,kRp.hierarchy-method}
\alias{corpusChildren<-,-methods}
\alias{corpusCategory}
\alias{corpusCategory,kRp.hierarchy-method}
\alias{corpusCategory,-methods}
\alias{corpusCategory<-}
\alias{corpusCategory<-,kRp.hierarchy-method}
\alias{corpusCategory<-,-methods}
\alias{corpusID}
\alias{corpusID,kRp.hierarchy-method}
\alias{corpusID,-methods}
\alias{corpusID<-}
\alias{corpusID<-,kRp.hierarchy-method}
\alias{corpusID<-,-methods}
\alias{corpusPath}
\alias{corpusPath,kRp.hierarchy-method}
\alias{corpusPath,-methods}
\alias{corpusPath<-}
\alias{corpusPath<-,kRp.hierarchy-method}
\alias{corpusPath<-,-methods}
\alias{corpusFiles}
\alias{corpusFiles,kRp.hierarchy-method}
\alias{corpusFiles,-methods}
\alias{corpusFiles<-}
\alias{corpusFiles<-,kRp.hierarchy-method}
\alias{corpusFiles<-,-methods}
\alias{is.corpus}
\alias{[,kRp.hierarchy-method}
\alias{[,-methods}
\alias{[,kRp.hierarchy,ANY,ANY,ANY-method}
\alias{[<-,kRp.hierarchy-method}
\alias{[<-,-methods}
\alias{[<-,kRp.hierarchy,ANY,ANY,ANY-method}
\alias{[[,kRp.hierarchy-method}
\alias{[[,-methods}
\alias{[[,kRp.hierarchy,ANY-method}
\alias{[[<-,kRp.hierarchy-method}
\alias{[[<-,-methods}
\alias{[[<-,kRp.hierarchy,ANY,ANY-method}
\alias{tif_as_tokens_df}
\alias{tif_as_tokens_df,kRp.hierarchy-method}
\alias{tif_as_tokens_df,-methods}
\alias{tif_as_tokens_df,hierarchy-method}
\title{Getter/setter methods for kRp.hierarchy objects}
\usage{
corpusTagged(obj, level = NULL, id = NULL)

\S4method{corpusTagged}{kRp.hierarchy}(obj, level = NULL, id = NULL)

corpusTagged(obj) <- value

\S4method{corpusTagged}{kRp.hierarchy}(obj) <- value

corpusReadability(obj, level = NULL, id = NULL)

\S4method{corpusReadability}{kRp.hierarchy}(obj, level = NULL, id = NULL)

corpusReadability(obj) <- value

\S4method{corpusReadability}{kRp.hierarchy}(obj) <- value

corpusTm(obj, level = NULL, id = NULL)

\S4method{corpusTm}{kRp.hierarchy}(obj, level = NULL, id = NULL)

corpusTm(obj) <- value

\S4method{corpusTm}{kRp.hierarchy}(obj) <- value

corpusMeta(obj, meta = NULL, fail = TRUE)

\S4method{corpusMeta}{kRp.hierarchy}(obj, meta = NULL, fail = TRUE)

corpusMeta(obj, meta = NULL) <- value

\S4method{corpusMeta}{kRp.hierarchy}(obj, meta = NULL) <- value

corpusHyphen(obj, level = NULL, id = NULL)

\S4method{corpusHyphen}{kRp.hierarchy}(obj, level = NULL, id = NULL)

corpusHyphen(obj) <- value

\S4method{corpusHyphen}{kRp.hierarchy}(obj) <- value

corpusTTR(obj, level = NULL, id = NULL)

\S4method{corpusTTR}{kRp.hierarchy}(obj, level = NULL, id = NULL)

corpusTTR(obj) <- value

\S4method{corpusTTR}{kRp.hierarchy}(obj) <- value

corpusFreq(obj, level = NULL, id = NULL)

\S4method{corpusFreq}{kRp.hierarchy}(obj, level = NULL, id = NULL)

corpusFreq(obj) <- value

\S4method{corpusFreq}{kRp.hierarchy}(obj) <- value

corpusLevel(obj)

\S4method{corpusLevel}{kRp.hierarchy}(obj)

corpusLevel(obj) <- value

\S4method{corpusLevel}{kRp.hierarchy}(obj) <- value

corpusChildren(obj, level = NULL, id = NULL)

\S4method{corpusChildren}{kRp.hierarchy}(obj, level = NULL, id = NULL)

corpusChildren(obj) <- value

\S4method{corpusChildren}{kRp.hierarchy}(obj) <- value

corpusCategory(obj, level = NULL, id = NULL)

\S4method{corpusCategory}{kRp.hierarchy}(obj, level = NULL, id = NULL)

corpusCategory(obj) <- value

\S4method{corpusCategory}{kRp.hierarchy}(obj) <- value

corpusID(obj, level = NULL)

\S4method{corpusID}{kRp.hierarchy}(obj, level = NULL)

corpusID(obj) <- value

\S4method{corpusID}{kRp.hierarchy}(obj) <- value

corpusPath(obj, level = NULL)

\S4method{corpusPath}{kRp.hierarchy}(obj, level = NULL)

corpusPath(obj) <- value

\S4method{corpusPath}{kRp.hierarchy}(obj) <- value

corpusFiles(obj, level = 0, paths = FALSE)

\S4method{corpusFiles}{kRp.hierarchy}(obj, level = 0, paths = FALSE)

corpusFiles(obj) <- value

\S4method{corpusFiles}{kRp.hierarchy}(obj) <- value

is.corpus(obj)

\S4method{[}{kRp.hierarchy}(x, i, j)

\S4method{[}{kRp.hierarchy}(x, i, j) <- value

\S4method{[[}{kRp.hierarchy}(x, i)

\S4method{[[}{kRp.hierarchy}(x, i) <- value

tif_as_tokens_df(tokens)

\S4method{tif_as_tokens_df}{kRp.hierarchy}(tokens)
}
\arguments{
\item{obj}{An object of class \code{\link[tm.plugin.koRpus:kRp.hierarchy-class]{kRp.hierarchy}}.}

\item{level}{Either the integer value or name (character string) of the target level. If \code{NULL} the top level is used.}

\item{id}{Character value specifying the category ID of child objects you want to get.
If \code{NULL} then the child objects of the current top level are returned,
otherwise all children with the ID specified. Only interpreted if \code{level=NULL}
(you can't use both at the same time).}

\item{value}{The new value to replace the current with.}

\item{meta}{If not NULL, the \code{meta} list entry of the given name.}

\item{fail}{Logical,
      whether the method should fail with an error if \code{meta} was not found.
If set to \code{FALSE}, returns \code{invisible(NULL)} instead.}

\item{paths}{Logical,
      indicates for \code{corpusFiles()} whether full paths should be returned, or just the actual file name.}

\item{x}{See \code{obj}.}

\item{i}{Defines the row selector (\code{[}) or the name to match (\code{[[}) in the summary slot.}

\item{j}{Defines the column selector in the summary slot.}
}
\description{
These methods should be used to get or set values of text objects
generated by functions like \code{\link[tm.plugin.koRpus:readCorpus]{readCorpus}}.
}
\details{
\itemize{
  \item{\code{corpusTagged()} }{returns the list of \code{kRp.tagged} objects.}
  \item{\code{corpusReadability()} }{returns the list of \code{kRp.readability} objects.}
  \item{\code{corpusTm()} }{returns the \code{VCorpus} object.}
  \item{\code{corpusMeta()} }{returns the list with meta information.}
  \item{\code{corpusHyphen()} }{returns the list of \code{kRp.hyphen} objects.}
  \item{\code{corpusTTR()} }{returns the list of \code{kRp.TTR} objects.}
  \item{\code{corpusLevel()} }{returns the level value of the top level object.}
  \item{\code{corpusCategory()} }{returns the character vector of categories of the top level object.}
  \item{\code{corpusID()} }{returns the character vector of category IDs of the top level object.}
  \item{\code{corpusPath()} }{returns the root directory path of the top level object.}
  \item{\code{corpusFiles()} }{returns the character vector of file names of level 0 of the object.}
  \item{\code{[}/\code{[[} }{Can be used as a shortcut to index the results of \code{corpusSummary()}.}
  \item{\code{tif_as_tokens_df} }{returns the \code{TT.res} slots of all texts in a single TIF[1] compliant
     data.frame, i.e., \code{doc_id} is not a factor but a character vector.}
}

Please note that the \code{<-} methods usually do not work on nested levels but only on single object nodes.
}
\examples{
\dontrun{
corpusTagged(myCorpus)
corpusMeta(myCorpus, "note") <- "an interesting read!"
}
}
\references{
[1] Text Interchange Formats (\url{https://github.com/ropensci/tif})
}
